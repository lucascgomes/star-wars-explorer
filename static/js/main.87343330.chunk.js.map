{"version":3,"sources":["reducers/fetchSlice.ts","components/Loader/index.tsx","reducers/fetchMovieProfileSlice.ts","reducers/fetchMoviesListSlice.ts","reducers/fetchPeopleListSlice.ts","reducers/fetchPersonProfileSlice.ts","reducers/fetchPlanetProfileSlice.ts","reducers/fetchPlanetsListSlice.ts","theme.tsx","store.ts","components/NagivationLayout/Crumb.tsx","components/NagivationLayout/AppBar.tsx","components/NagivationLayout/index.tsx","components/App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["fetchSlice","name","initialData","createSlice","initialState","isLoading","error","data","reducers","beginFetch","state","fetchSuccess","action","payload","fetchError","swing","keyframes","LightSaber","styled","Handle","Blade","LinearProgress","Loader","fetchMovieProfileSlice","actions","fetchMoviesListSlice","fetchPeopleListSlice","fetchPersonProfileSlice","fetchPlanetProfileSlice","fetchPlanetsListSlice","theme","createTheme","palette","mode","primary","main","configureStore","reducer","movieProfileReducer","moviesListReducer","peopleListReducer","personProfileReducer","planetProfileReducer","planetsListReducer","Crumb","to","label","clickable","variant","color","underline","component","Link","Typography","LOCATION_TO_MESSAGE","AppBar","pathname","useLocation","paths","split","listPagePath","Toolbar","sx","marginRight","Breadcrumbs","Container","MuiContainer","paddingTop","paddingBottom","Paper","MuiPaper","backgroundColor","backgroundImage","NagivationLayout","maxWidth","HomePage","lazy","PeopleListPage","PersonProfilePage","MoviesListPage","MovieProfilePage","PlanetsListPage","PlanetProfilePage","NoMatchPage","App","path","element","index","fallback","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","store","document","getElementById"],"mappings":"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","file":"static/js/main.87343330.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const fetchSlice = (name: string, initialData: any) =>\n  createSlice({\n    name: name,\n    initialState: {\n      isLoading: false,\n      error: null,\n      data: initialData,\n    },\n    reducers: {\n      beginFetch: (state) => {\n        state.isLoading = true;\n        state.error = null;\n      },\n      fetchSuccess: (state, action) => {\n        state.isLoading = false;\n        state.data = action.payload;\n      },\n      fetchError: (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      },\n    },\n  });\n","import React from \"react\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { styled, keyframes } from \"@mui/system\";\n\ninterface LoaderModel {\n  name: string;\n}\n\nconst swing = keyframes`\n  from {transform: rotateZ(-45deg) rotateY(-30deg);}\n  50%  {transform: rotateZ(-30deg) rotateY(-45deg);}\n  to   {transform: rotateZ(-45deg) rotateY(-30deg);}\n`;\n\nconst LightSaber = styled(\"div\")`\n  position: absolute;\n  top: 50vh;\n  left: 12.5vw;\n  width: 75vw;\n  animation: ${swing} 3s infinite;\n`;\n\nconst Handle = styled(\"div\")`\n  width: 14vw;\n  height: 1vw;\n  background-color: #fff;\n  top: 0.8vw;\n  position: relative;\n  z-index: 10;\n`;\n\nconst Blade = styled(LinearProgress)`\n  height: 0.7vw;\n`;\n\nfunction Loader({ name }: LoaderModel) {\n  return (\n    <LightSaber>\n      <Handle />\n      <Blade />\n    </LightSaber>\n  );\n}\n\nexport default Loader;\n","import { fetchSlice } from \"./fetchSlice\";\n\nconst fetchMovieProfileSlice = fetchSlice(\"movieProfile\", {});\n\nexport const { beginFetch, fetchSuccess, fetchError } =\n  fetchMovieProfileSlice.actions;\n\nexport default fetchMovieProfileSlice.reducer;\n","import { fetchSlice } from \"./fetchSlice\";\n\nconst fetchMoviesListSlice = fetchSlice(\"moviesList\", []);\n\nexport const { beginFetch, fetchSuccess, fetchError } =\n  fetchMoviesListSlice.actions;\n\nexport default fetchMoviesListSlice.reducer;\n","import { fetchSlice } from \"./fetchSlice\";\n\nconst fetchPeopleListSlice = fetchSlice(\"peopleList\", []);\n\nexport const { beginFetch, fetchSuccess, fetchError } =\n  fetchPeopleListSlice.actions;\n\nexport default fetchPeopleListSlice.reducer;\n","import { fetchSlice } from \"./fetchSlice\";\n\nconst fetchPersonProfileSlice = fetchSlice(\"personProfile\", {});\n\nexport const { beginFetch, fetchSuccess, fetchError } =\n  fetchPersonProfileSlice.actions;\n\nexport default fetchPersonProfileSlice.reducer;\n","import { fetchSlice } from \"./fetchSlice\";\n\nconst fetchPlanetProfileSlice = fetchSlice(\"planetProfile\", {});\n\nexport const { beginFetch, fetchSuccess, fetchError } =\n  fetchPlanetProfileSlice.actions;\n\nexport default fetchPlanetProfileSlice.reducer;\n","import { fetchSlice } from \"./fetchSlice\";\n\nconst fetchPlanetsListSlice = fetchSlice(\"planetsList\", []);\n\nexport const { beginFetch, fetchSuccess, fetchError } =\n  fetchPlanetsListSlice.actions;\n\nexport default fetchPlanetsListSlice.reducer;\n","import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: {\n      main: \"#FFE81F\",\n    },\n  },\n});\n\nexport default theme;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport movieProfileReducer from \"./reducers/fetchMovieProfileSlice\";\nimport moviesListReducer from \"./reducers/fetchMoviesListSlice\";\nimport peopleListReducer from \"./reducers/fetchPeopleListSlice\";\nimport personProfileReducer from \"./reducers/fetchPersonProfileSlice\";\nimport planetProfileReducer from \"./reducers/fetchPlanetProfileSlice\";\nimport planetsListReducer from \"./reducers/fetchPlanetsListSlice\";\n\nexport default configureStore({\n  reducer: {\n    movieProfileReducer,\n    moviesListReducer,\n    peopleListReducer,\n    personProfileReducer,\n    planetProfileReducer,\n    planetsListReducer,\n  },\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@mui/material/Typography\";\nimport MuiLink from \"@mui/material/Link\";\n\ninterface CrumbModel {\n  to: string;\n  label: string;\n  clickable: boolean;\n}\n\nfunction Crumb({ to, label, clickable }: CrumbModel) {\n  return clickable ? (\n    <MuiLink\n      variant=\"h6\"\n      color=\"inherit\"\n      underline=\"hover\"\n      component={Link}\n      to={to}\n    >\n      {label}\n    </MuiLink>\n  ) : (\n    <Typography variant=\"h6\">{label}</Typography>\n  );\n}\n\nexport default Crumb;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport MovieFilterIcon from \"@mui/icons-material/MovieFilter\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Crumb from \"./Crumb\";\n\ninterface MessageMap {\n  [key: string]: string;\n}\n\nconst LOCATION_TO_MESSAGE: MessageMap = {\n  \"/people\": \"People\",\n  \"/movies\": \"Movies\",\n  \"/planets\": \"Planets\",\n};\n\nfunction AppBar() {\n  const { pathname } = useLocation();\n  const paths = pathname.split(\"/\");\n  const listPagePath = `/${paths[1]}`;\n\n  return (\n    <MuiAppBar>\n      <Toolbar>\n        <MovieFilterIcon sx={{ marginRight: 3 }} />\n        <Breadcrumbs color=\"inherit\" aria-label=\"breadcrumb\">\n          <Crumb\n            to=\"/\"\n            label=\"Star Wars Explorer\"\n            clickable={pathname !== \"/\"}\n          />\n          {paths[1] && (\n            <Crumb\n              to={listPagePath}\n              label={LOCATION_TO_MESSAGE[listPagePath]}\n              clickable={pathname !== listPagePath}\n            />\n          )}\n          {paths[2] && <Crumb to=\"\" label=\"Profile\" clickable={false} />}\n        </Breadcrumbs>\n      </Toolbar>\n    </MuiAppBar>\n  );\n}\n\nexport default AppBar;\n","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport MuiContainer from \"@mui/material/Container\";\nimport MuiPaper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/system\";\nimport AppBar from \"./AppBar\";\n\nconst Container = styled(MuiContainer)({\n  paddingTop: \"100px\",\n  paddingBottom: \"36px\",\n});\n\nconst Paper = styled(MuiPaper)({\n  backgroundColor: \"#000\",\n  backgroundImage: \"none\",\n});\n\nfunction NagivationLayout() {\n  return (\n    <Paper>\n      <AppBar />\n      <Container maxWidth=\"md\">\n        <Outlet />\n      </Container>\n    </Paper>\n  );\n}\n\nexport default NagivationLayout;\n","import React, { lazy, Suspense } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport NagivationLayout from \"../NagivationLayout\";\nimport Loader from \"../Loader\";\n\nconst HomePage = lazy(() => import(\"../HomePage\"));\nconst PeopleListPage = lazy(() => import(\"../PeopleListPage\"));\nconst PersonProfilePage = lazy(() => import(\"../PersonProfilePage\"));\nconst MoviesListPage = lazy(() => import(\"../MoviesListPage\"));\nconst MovieProfilePage = lazy(() => import(\"../MovieProfilePage\"));\nconst PlanetsListPage = lazy(() => import(\"../PlanetsListPage\"));\nconst PlanetProfilePage = lazy(() => import(\"../PlanetProfilePage\"));\nconst NoMatchPage = lazy(() => import(\"../NoMatchPage\"));\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<NagivationLayout />}>\n        <Route\n          index\n          element={\n            <Suspense fallback={<Loader name=\"Home Page\" />}>\n              <HomePage />\n            </Suspense>\n          }\n        />\n        <Route\n          path=\"/people\"\n          element={\n            <Suspense fallback={<Loader name=\"People List Page\" />}>\n              <PeopleListPage />\n            </Suspense>\n          }\n        />\n        <Route\n          path=\"/people/:personId\"\n          element={\n            <Suspense fallback={<Loader name=\"Person Profile Page\" />}>\n              <PersonProfilePage />\n            </Suspense>\n          }\n        />\n        <Route\n          path=\"/movies\"\n          element={\n            <Suspense fallback={<Loader name=\"Movies List Page\" />}>\n              <MoviesListPage />\n            </Suspense>\n          }\n        />\n        <Route\n          path=\"/movies/:movieId\"\n          element={\n            <Suspense fallback={<Loader name=\"Movie Profile Page\" />}>\n              <MovieProfilePage />\n            </Suspense>\n          }\n        />\n        <Route\n          path=\"/planets\"\n          element={\n            <Suspense fallback={<Loader name=\"Planets List Page\" />}>\n              <PlanetsListPage />\n            </Suspense>\n          }\n        />\n        <Route\n          path=\"/planets/:planetId\"\n          element={\n            <Suspense fallback={<Loader name=\"Planet Profile Page\" />}>\n              <PlanetProfilePage />\n            </Suspense>\n          }\n        />\n        <Route\n          path=\"/star-wars-explorer\"\n          element={<Navigate to=\"/\" replace />}\n        />\n        <Route\n          path=\"*\"\n          element={\n            <Suspense fallback={<Loader name=\"Page\" />}>\n              <NoMatchPage />\n            </Suspense>\n          }\n        />\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { Provider } from \"react-redux\";\nimport theme from \"./theme\";\nimport store from \"./store\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./base.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}