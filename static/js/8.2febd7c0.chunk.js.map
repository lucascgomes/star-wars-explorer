{"version":3,"sources":["components/LinkButton/index.tsx","hooks/useListFetch.ts","components/StarWarsList/index.tsx","components/PlanetsListPage/index.tsx"],"names":["LinkButton","to","children","sx","minWidth","variant","size","component","Link","api","onSuccess","onError","dispatch","a","nextPage","result","fetch","then","response","json","data","next","concat","results","map","item","id","url","match","fetchList","actions","beginFetch","fetchSuccess","fetchError","getAllPages","useListFetch","name","slice","useSelector","state","useDispatch","useMemo","StarWarsList","items","isLoading","error","link","accessor","severity","spacing","justifyContent","alignItems","replace","PlanetsListPage","useEffect","PLANET_PROFILE_PAGE"],"mappings":"gIAAA,iCAuBeA,IAdf,YAAwD,IAAlCC,EAAiC,EAAjCA,GAAIC,EAA6B,EAA7BA,SACxB,OACE,cAAC,IAAD,CACEC,GAAI,CAAEC,SAAU,KAChBC,QAAQ,WACRC,KAAK,QACLC,UAAWC,IACXP,GAAIA,EALN,SAOGC,M,oICLP,WACEO,EACAC,EACAC,EACAC,GAJF,mBAAAC,EAAA,sDAMMC,EAAWL,EACXM,EAAgB,GAPtB,oBAUWD,EAVX,iCAWyBE,MAAMF,GAAUG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAXrE,OAWYC,EAXZ,OAYMN,EAAWM,EAAKC,KAChBN,EAASA,EAAOO,OAAOF,EAAKG,SAblC,uBAgBIX,EACEF,EACEK,EAAOS,KAAI,SAACC,GAAD,mBAAC,eACPA,GADM,IAETC,GAAID,EAAKE,IAAIC,MAAM,aAAa,UApB1C,kDAyBIhB,EAASD,EAAQ,EAAD,KAzBpB,2D,sBA6BA,IAAMkB,EACJ,SAACjB,GAAD,OAAwB,SAACH,EAAaqB,GACpC,IAAQC,EAAyCD,EAAzCC,WAAYC,EAA6BF,EAA7BE,aAAcC,EAAeH,EAAfG,WAClCrB,EAASmB,K,0CACTG,CAAYzB,EAAKuB,EAAcC,EAAYrB,KAWhCuB,IARM,SAACC,GACpB,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAuBA,EAAMH,MACjDxB,EAAW4B,cAGjB,MAAO,CAACH,EAFcI,mBAAQ,kBAAMZ,EAAUjB,KAAW,CAACA,O,iCCpD5D,mDAiDe8B,IA9Bf,YAMuB,IALrBC,EAKoB,EALpBA,MACAC,EAIoB,EAJpBA,UACAC,EAGoB,EAHpBA,MACAC,EAEoB,EAFpBA,KACAC,EACoB,EADpBA,SAEA,OAAIH,EACK,cAAC,IAAD,CAAQR,KAAK,SAGlBS,EAEA,cAAC,IAAD,CAAOG,SAAS,QAAhB,kFAOF,cAAC,IAAD,CAAOC,QAAS,EAAGC,eAAe,SAASC,WAAW,SAAtD,SACGR,EAAMnB,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CAAYxB,GAAI6C,EAAKM,QAAQ,aAAc3B,EAAKC,IAAhD,SACGD,EAAKsB,IADkDtB,EAAKC,W,oGCNxD2B,UAzBf,WACE,MACElB,YAAa,sBADf,0BAASS,EAAT,EAASA,UAAWC,EAApB,EAAoBA,MAAOzB,EAA3B,EAA2BA,KAAQS,EAAnC,KAWA,OARAyB,qBAAU,WACRzB,EAAU,gCAAiC,CACzCE,eACAC,iBACAC,mBAED,CAACJ,IAGF,8BACE,cAAC,IAAD,CACEe,UAAWA,EACXC,MAAOA,EACPF,MAAOvB,EACP0B,KAAMS,IACNR,SAAS","file":"static/js/8.2febd7c0.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { Link } from \"react-router-dom\";\n\ninterface LinkButtonModel {\n  to: string;\n  children: any;\n}\n\nfunction LinkButton({ to, children }: LinkButtonModel) {\n  return (\n    <Button\n      sx={{ minWidth: 300 }}\n      variant=\"outlined\"\n      size=\"large\"\n      component={Link}\n      to={to}\n    >\n      {children}\n    </Button>\n  );\n}\n\nexport default LinkButton;\n","import { useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\ninterface StateModel {\n  [key: string]: any;\n}\n\ninterface ActionModel {\n  beginFetch: Function;\n  fetchSuccess: Function;\n  fetchError: Function;\n}\n\nasync function getAllPages(\n  api: string,\n  onSuccess: Function,\n  onError: Function,\n  dispatch: Function\n) {\n  let nextPage = api;\n  let result: any[] = [];\n\n  try {\n    while (nextPage) {\n      const data = await fetch(nextPage).then((response) => response.json());\n      nextPage = data.next;\n      result = result.concat(data.results);\n    }\n\n    dispatch(\n      onSuccess(\n        result.map((item: any) => ({\n          ...item,\n          id: item.url.match(/\\/(\\d+)\\//)[1],\n        }))\n      )\n    );\n  } catch (exception) {\n    dispatch(onError(exception));\n  }\n}\n\nconst fetchList =\n  (dispatch: Function) => (api: string, actions: ActionModel) => {\n    const { beginFetch, fetchSuccess, fetchError } = actions;\n    dispatch(beginFetch());\n    getAllPages(api, fetchSuccess, fetchError, dispatch);\n  };\n\nconst useListFetch = (name: string) => {\n  const slice = useSelector((state: StateModel) => state[name]);\n  const dispatch = useDispatch();\n  const fetchListMemo = useMemo(() => fetchList(dispatch), [dispatch]);\n\n  return [slice, fetchListMemo];\n};\n\nexport default useListFetch;\n","import React from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Alert from \"@mui/material/Alert\";\nimport LinkButton from \"../LinkButton\";\nimport Loader from \"../Loader\";\n\ninterface Item {\n  [key: string]: string;\n  id: string;\n}\n\ninterface StarWarsListModel {\n  items: Array<Item>;\n  isLoading: boolean;\n  error: any;\n  link: string;\n  accessor: string;\n}\n\nfunction StarWarsList({\n  items,\n  isLoading,\n  error,\n  link,\n  accessor,\n}: StarWarsListModel) {\n  if (isLoading) {\n    return <Loader name=\"list\" />;\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\">\n        An error occurred while retrieving the list. Please try again later.\n      </Alert>\n    );\n  }\n\n  return (\n    <Stack spacing={2} justifyContent=\"center\" alignItems=\"center\">\n      {items.map((item: Item) => (\n        <LinkButton to={link.replace(\":profileId\", item.id)} key={item.id}>\n          {item[accessor]}\n        </LinkButton>\n      ))}\n    </Stack>\n  );\n}\n\nexport default StarWarsList;\n","import React, { useEffect } from \"react\";\nimport useListFetch from \"../../hooks/useListFetch\";\nimport {\n  beginFetch,\n  fetchSuccess,\n  fetchError,\n} from \"../../reducers/fetchPlanetsListSlice\";\nimport { PLANET_PROFILE_PAGE } from \"../../locations\";\nimport StarWarsList from \"../StarWarsList\";\n\nfunction PlanetsListPage() {\n  const [{ isLoading, error, data }, fetchList] =\n    useListFetch(\"planetsListReducer\");\n\n  useEffect(() => {\n    fetchList(\"https://swapi.dev/api/planets\", {\n      beginFetch,\n      fetchSuccess,\n      fetchError,\n    });\n  }, [fetchList]);\n\n  return (\n    <div>\n      <StarWarsList\n        isLoading={isLoading}\n        error={error}\n        items={data}\n        link={PLANET_PROFILE_PAGE}\n        accessor=\"name\"\n      />\n    </div>\n  );\n}\n\nexport default PlanetsListPage;\n"],"sourceRoot":""}